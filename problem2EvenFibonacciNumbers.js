// Project Euler: Problem 2: Even Fibonacci Numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.

// for shits and giggles, I decided to make this one with a recursive function

function fiboEvenSum(n) {

  function createFib(array,max){
    if( array[array.length-1] > max ){ return array.slice(0,-1)}
    if(max <= 1){
      return [ 1 ]
    }
    else{
      const newArray = [ ...array, array[array.length-1] + array[array.length - 2]]
      return createFib( newArray, max)
    }
  }
  // array.reduce(functionCallback,intitial value)
    const fib = createFib([1,2],n)
    return fib.reduce((accumulator, number ) => {
      if(number%2 === 0)return accumulator + number
      else{ return accumulator }
    }, 0)

}

console.log(fiboEvenSum(10))
